version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mattilda_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: Abc..123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - mattilda-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d mattilda_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicaci√≥n FastAPI
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://app_user:Abc..123@postgres:5432/mattilda_db
      - DATABASE_URL_ASYNC=postgresql+asyncpg://app_user:Abc..123@postgres:5432/mattilda_db
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    networks:
      - mattilda-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - mattilda-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  mattilda-network:
    driver: bridge